const SAO={_utf8Enc:new TextEncoder,fromBase64(e){return Uint8Array.from(atob(e),e=>e.charCodeAt()).buffer},fromHex:(()=>{let i={};let t=Array.from("0123456789abcdef");for(let e=0;e<256;++e){i[t[e>>>4]+t[e&15]]=e}return t=>{let r=t.length;if(r&1){throw"16進位字串必須有偶數個字元"}let n=new Uint8Array(r>>>1);for(let e=1;e<r;e+=2){n[e>>>1]=i[t.slice(e-1,e+1)]}return n.buffer}})(),toBase64(e){let t=new Uint8Array(e);let r=String.fromCharCode.apply(null,t);return btoa(r)},toHex:(()=>{let i=[];let t=Array.from("0123456789abcdef");for(let e=0;e<256;++e){i.push(t[e>>>4]+t[e&15])}return e=>{let r=new Uint8Array(e);let n="";for(let e=0,t=r.length;e<t;++e){n+=i[r[e]]}return n}})(),hash:async function(e,t,r){t=this._utf8Enc.encode(t);let n=await crypto.subtle.digest(e,t);return r?r(n):n},hash_hmac:async function(e,t,r,n){t=this._utf8Enc.encode(t);r=this._utf8Enc.encode(r);r=await crypto.subtle.importKey("raw",r,{name:"HMAC",hash:{name:e}},false,["sign","verify"]);let i=await crypto.subtle.sign("HMAC",r,t);return n?n(i):i},genKey:async function(e){let t=await crypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:e},true,["sign","verify"]);let r=await Promise.all([crypto.subtle.exportKey("pkcs8",t.privateKey),crypto.subtle.exportKey("spki",t.publicKey)]);let n=r.map((e,t)=>{let r=btoa(String.fromCharCode.apply(null,new Uint8Array(e)));let n=t===0?"PRIVATE":"PUBLIC";let i=[`-----BEGIN ${n} KEY-----`];for(let e=0,t=r.length;e<t;e+=64){i.push(r.slice(e,e+64<t?e+64:t))}i.push(`-----END ${n} KEY-----\n`);return i.join("\n")});return{privateKey:n[0],publicKey:n[1]}},_importKey:async function(e,t){t={name:"RSASSA-PKCS1-v1_5",hash:t};let r=e.split("\n");let n=r[0].match(/-----BEGIN ([A-Z]+) KEY-----/)[1];let i=r.reduce((e,t)=>{if(t.length>0&&t[0]!=="-"){e+=t}return e},"");let a=this.fromBase64(i);if(n=="PRIVATE"){return crypto.subtle.importKey("pkcs8",a,t,true,["sign"])}else if(n==="PUBLIC"){return crypto.subtle.importKey("spki",a,t,true,["verify"])}else{return Promise.reject("不支援的 key")}},sign:async function(e,t,r,n){t=await this._importKey(t,r);let i=await crypto.subtle.sign("RSASSA-PKCS1-v1_5",t,this._utf8Enc.encode(e));return n?n(i):i},verify:async function(e,t,r,n,i){r=await this._importKey(r,n);if(i){t=i(t)}let a=await crypto.subtle.verify("RSASSA-PKCS1-v1_5",r,t,this._utf8Enc.encode(e));return a}};